{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","day","onClick","onContextMenu","event","preventDefault","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SACEC,GAGIA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cArBzE,kCAyBE,WACER,OAAOW,cAAcZ,KAAKD,WA1B9B,oBA6BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YAvCtD,GAA2BO,IAAMC,W,MCCjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMG,EAAb,4MACExB,MAAe,CACbyB,UAAU,EACVZ,UAAW,WAHf,EAMEa,IAAM,IAAIxB,KANZ,EAQEC,QAAU,EARZ,EAmBEwB,QAAU,WACR,EAAKpB,SAAS,CAAEkB,UAAU,KApB9B,EAuBEG,cAAgB,SAACC,GACfA,EAAMC,iBACN,EAAKvB,SAAS,CAAEkB,UAAU,KAzB9B,uDAUE,WAA2B,IAAD,OACxBrB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEM,UAAWO,QAC1B,MAEHW,SAASC,iBAAiB,QAAS5B,KAAKuB,SACxCI,SAASC,iBAAiB,cAAe5B,KAAKwB,iBAhBlD,oBA4BE,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,6CAECb,KAAKJ,MAAMyB,UACV,cAAC,EAAD,CAAOZ,UAAWT,KAAKJ,MAAMa,mBAlCvC,GAAyBK,IAAMC,WCd/Bc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.acd8e8e4.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  today: Date;\n}\n\ninterface Props {\n  clockName: string;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n    // prevState: Readonly<StateC>\n  ): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\ntype Props = {};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<Props, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  day = new Date();\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('click', this.onClick);\n    document.addEventListener('contextmenu', this.onContextMenu);\n  }\n\n  onClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  onContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock clockName={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}